version: "3.7"

services:

  app:
    build:
      args:
        user: root
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: larademo
    container_name: app
    restart: unless-stopped
    tty: true
    ports:
        - 8210:8000
    env_file:
      - .env
    volumes:
        - ./:/var/www
    # command: bash -c "php artisan serve --host=0.0.0.0 --port=8000"

  # laraqueue:
  #   image: larademo
  #   container_name: laraqueue
  #   restart: always
  #   working_dir: /var/www/
  #   command: php artisan queue:work
  #   depends_on:
  #       - app
  #   volumes:
  #       - ./:/var/www

  # db:
  #   image: mysql:latest
  #   container_name: db
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   environment:
  #     # MYSQL_DATABASE: ${DB_DATABASE}
  #     # MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
  #     # MYSQL_PASSWORD: ${DB_PASSWORD}
  #     # MYSQL_USER: ${DB_USERNAME}
  #     MYSQL_DATABASE: demo
  #     MYSQL_ROOT_PASSWORD: demo
  #     MYSQL_PASSWORD: demo
  #     MYSQL_USER: demo
  #   command:
  #     - "--character-set-server=utf8mb4"
  #     - "--collation-server=utf8mb4_general_ci"
  #     - "--default-authentication-plugin=mysql_native_password"
  #     - "--event_scheduler=ON"
  #   volumes:
  #     - ./docker-compose/mysql/init:/docker-entrypoint-initdb.d
  #     - ./docker-compose/mysql/data:/var/lib/mysql
  #     - ./docker-compose/mysql/backup:/backup
  #   ports:
  #     - 3366:3306

  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   ports:
  #     - 8000:80
  #   volumes:
  #     - ./:/var/www
  #     - ./docker-compose/nginx:/etc/nginx/conf.d/
